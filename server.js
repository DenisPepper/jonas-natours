// –ø—Ä–æ—á–∏—Ç–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π—Ü–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
// —ç—Ç–æ—Ç –∫–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ª—é–±–æ–º —Ñ–∞–π–ª–µ, –Ω–æ –Ω–∞ —Å–∞–º–æ–π –≤–µ—Ä—Ö–Ω–µ–π —Å—Ç—Ä–æ—á–∫–µ
// —Ç–æ–≥–¥–∞ process.env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ª—é–±–æ–º –º–æ–¥—É–ª–µ
require('dotenv').config({ path: './config.env' });

const mongoose = require('mongoose');
const app = require('./app');

mongoose
  .connect(process.env.DATABASE, {
    useNewUrlParser: true,
    useCreateIndex: true,
    useFindAndModify: false,
    useUnifiedTopology: true,
  })
  .then(() => console.log('DB connection success...'));

const tourSchema = new mongoose.Schema({
  name: {
    type: String,
    required: [true, 'Tour must have a name'],
    unique: true,
  },
  rating: { type: Number, default: 4.5 },
  price: { type: Number, required: [true, 'Tour must have a price'] },
});

const Tour = mongoose.model('Tour', tourSchema);
const testTour = new Tour({
  name: 'The Forest Hiker',
  rating: 4.7,
  price: 490,
});
testTour
  .save()
  .then((doc) => console.log('save OK ‚≠ê'))
  .catch((err) => console.log('error at save üê∏'));

const port = process.env.PORT;

app.listen(port, () =>
  console.log(`server run on http://127.0.0.1:${port} ...`),
);

/* // –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è node
console.log(process.env);

// –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è express
console.log(app.get('env'));
 */
