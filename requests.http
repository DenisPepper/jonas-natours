// пример noSQL инъекции для входа в приложение без логина
// этот запрос, при условии правильного пароля, авторизует отправителя
// app.use(mongoSanitize()) - включает парсер, который выкидывает из текста запроса служебные символы mongo
POST http://127.0.0.1:3000/api/v1/users/login HTTP/1.1
content-type: application/json

{
  "email": {"$gt": ""},
  "password": "pass123456"
}
###

// отключит пользователя
DELETE  http://127.0.0.1:3000/api/v1/users/deleteUser HTTP/1.1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTNjZjc4MjhmMDJhMzA0OGU2YjBjYSIsImlhdCI6MTcwMDEyNTU5OSwiZXhwIjoxNzA3OTAxNTk5fQ.Ymo_1WXPVwvyxjj5NxpLBZA61eOFiboSELiDp4bBGcU
content-type: application/json

###

// update user info (name, email)
PATCH  http://127.0.0.1:3000/api/v1/users/updateUserInfo HTTP/1.1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTNjZjc4MjhmMDJhMzA0OGU2YjBjYSIsImlhdCI6MTcwMDEyMzg0MSwiZXhwIjoxNzA3ODk5ODQxfQ.fFPzOCCuwh29qIEfFKISXvZ5ZZScQoL4DuTWQlT1YZw
content-type: application/json
 
{
  "name": "Den Pepper",
  "email": "pepperden21@gmail.com",
  "role": "fake-role"
}
###

// update password
PATCH  http://127.0.0.1:3000/api/v1/users/updatePassword HTTP/1.1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTNjZjc4MjhmMDJhMzA0OGU2YjBjYSIsImlhdCI6MTcwMDExNzMwOSwiZXhwIjoxNzA3ODkzMzA5fQ.Az9ecDRRvYAxSFE3sWb8lx8C92m0VfD34OQHZDT-pPU
content-type: application/json
 
{
  "currentPassword": "pass123456",
  "password": "123456",
  "passwordConfirm": "123456"
}
###

// запрос - когда забыл пароль
POST http://127.0.0.1:3000/api/v1/users/forgotPassword HTTP/1.1
content-type: application/json
  
{
  "email": "pepperden21@gmail.com"
}
###

// reset password
PATCH  http://127.0.0.1:3000/api/v1/users/resetPassword/421d6851fb2b6a8d9cfa64a882da22aac755ffc623146def2dd5ff2410eb7a3b HTTP/1.1
content-type: application/json
  
{
  "password": "pass123456",
  "passwordConfirm": "pass123456"
}
###

// create a new user
POST http://127.0.0.1:3000/api/v1/users/signup HTTP/1.1
content-type: application/json
 
{
  "name": "Denis st Pepper",
  "email": "denis_pepper@vk.com",
  "password": "pass123456",
  "passwordConfirm": "pass123456",
  "role": "guide"
}
###

// login
POST http://127.0.0.1:3000/api/v1/users/login HTTP/1.1
content-type: application/json

{
  "email": "denis_pepper@vk.com",
  "password": "pass123456"
}
###

// get all users
GET http://127.0.0.1:3000/api/v1/users/ HTTP/1.1
###

// get tour s monthly plan
GET http://127.0.0.1:3000/api/v1/tours/monthly-plan/2022 HTTP/1.1
###

// get tour stats
GET http://127.0.0.1:3000/api/v1/tours/tour-stats HTTP/1.1
###

// get 5 cheap
GET http://127.0.0.1:3000/api/v1/tours/top-5-cheap HTTP/1.1
###

// get tours by pages & limits (pagination)
GET http://127.0.0.1:3000/api/v1/tours/?page=3&limit=4&fields=name,price HTTP/1.1
###

// get tours by fields
GET http://127.0.0.1:3000/api/v1/tours/?fields=name,price HTTP/1.1
###

// get tours by excluded fields
GET http://127.0.0.1:3000/api/v1/tours/?fields=-name,-price HTTP/1.1
###

// get tours by filters
GET http://127.0.0.1:3000/api/v1/tours/?difficulty=easy&duration=5 HTTP/1.1
###

// get tours by filters gte & sorting
GET http://127.0.0.1:3000/api/v1/tours/?duration[gte]=5&sort=duration HTTP/1.1
###

// get tours by filters gte & sorting by severals keys
GET http://127.0.0.1:3000/api/v1/tours/?difficulty=easy&duration[lte]=5&sort=duration,price HTTP/1.1
###

// get tours by filters gte & sorting reverse
GET http://127.0.0.1:3000/api/v1/tours/?duration[gte]=5&sort=-duration HTTP/1.1
###

// patch tour by id
PATCH  http://127.0.0.1:3000/api/v1/tours/6543739ec9eeab4bdc73c81e HTTP/1.1
content-type: application/json

{
    "price": 550
}
###

// delete tour by id 
DELETE http://127.0.0.1:3000/api/v1/tours/655b2f457ef9194aa0d9e257 HTTP/1.1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTNjZjc4MjhmMDJhMzA0OGU2YjBjYSIsImlhdCI6MTcwMDQ3MzU5NywiZXhwIjoxNzAxMzM3NTk3fQ.PjTZZUoOY_jsNH6SHqNCqHrFKZJiprUkYndRqjMsCHs
###

// get all tours
GET http://127.0.0.1:3000/api/v1/tours/ HTTP/1.1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTNjZjc4MjhmMDJhMzA0OGU2YjBjYSIsImlhdCI6MTcwMDQ3MzU5NywiZXhwIjoxNzAxMzM3NTk3fQ.PjTZZUoOY_jsNH6SHqNCqHrFKZJiprUkYndRqjMsCHs
###

// create a new tour
POST http://127.0.0.1:3000/api/v1/tours/ HTTP/1.1
content-type: application/json
 
{
  "name": "new best test tour",
  "duration": 7,
  "maxGroupSize": 15,
  "difficulty": "medium",
  "price": 1015,
  "summary": "Test",
  "description": "Test.",
  "imageCover": "tour-2-cover.jpg",
  "isSecret": false,
  "ratingsAverage":5,
  "guides": ["6555f0fcd14ea01458f6c8f7", "6553cf7828f02a3048e6b0ca"]
}
###

// get tour by id
GET http://127.0.0.1:3000/api/v1/tours/655b2fe37ef9194aa0d9e25d HTTP/1.1
###
 
 // create review
POST http://127.0.0.1:3000/api/v1/reviews/ HTTP/1.1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTVmMGZjZDE0ZWEwMTQ1OGY2YzhmNyIsImlhdCI6MTcwMDQ4MTQ3OCwiZXhwIjoxNzAxMzQ1NDc4fQ.ni0pEiHNaLS6Yf7DGh-gwFvHNzf1YOj2-mnFEdnQ85Q
content-type: application/json

{
  "tour": "5c88fa8cf4afda39709c295a",
  "user": "6555f0fcd14ea01458f6c8f7",
  "review": "Мне не понравилось, плохо кормили...",
  "rating": 3
}
###

// get tour by id
GET http://127.0.0.1:3000/api/v1/reviews HTTP/1.1
### 